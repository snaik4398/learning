
refere git doucmentation
git config 

git config --local 
			-- global 
			-- system 



setting the user name 

git config --global user.name "sanjay" 


check the user name 
 git config user.name 
 
 

git config --global user.email "snaik.4398@gmail.com" 

cehck all the confgiuration 

git config --list


==============================

git in action 

create a directoy 
 
 got to cmd 
 
 type::
 git init :	 to initialize the repository 
 
 create a file  
 
 
 git status 
 ------------------------------------------------
PS C:\Users\Admin\Downloads\company Details\learing> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        git.txt
        linux releted.txt
---------------------
it is untraced files 


after using
-----------------------
git add .

-------------------------

PS C:\Users\Admin\Downloads\company Details\learing> git add .
PS C:\Users\Admin\Downloads\company Details\learing> git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   git.txt
        new file:   linux releted.txt

================

check in the .git file 

ls .git 

PS C:\Users\Admin\Downloads\company Details\learing> ls .git


    Directory: C:\Users\Admin\Downloads\company Details\learing\.git


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        14-06-2024     13:02                hooks
d-----        14-06-2024     13:02                info
d-----        14-06-2024     13:12                logs
d-----        14-06-2024     13:13                objects
d-----        14-06-2024     13:02                refs
-a----        14-06-2024     13:13             29 COMMIT_EDITMSG
-a----        14-06-2024     13:02            130 config
-a----        14-06-2024     13:02             73 description
-a----        14-06-2024     13:02             23 HEAD
-a----        14-06-2024     13:13            217 index



=============================================================
=============================================================
=============================================================
GIT LOG 
: it will show the all the commits that we made 
always the latet commitcome on top 


git log : show all the logs 
-------------------------------------------
PS C:\Users\Admin\Downloads\company Details\learing> git log
commit b9a6b31101a64bdae86f325b29925093b00bae7a (HEAD -> master)
Author: snaik4398 <snaik4398@gmail.com>
Date:   Fri Jun 14 13:23:07 2024 +0530

    changing git files 3rd times

commit a0c199df382918bcad29cf698155a5e2012c5840
Author: snaik4398 <snaik4398@gmail.com>
Date:   Fri Jun 14 13:13:59 2024 +0530

    changing git files 2nd times

commit 6a16c006bcdda10bd82d1d10fffb7ef0a2d60f41
Author: snaik4398 <snaik4398@gmail.com>
Date:   Fri Jun 14 13:13:38 2024 +0530

    changing git files

commit e9fa2e8a07fdcccce8d949a615fe0b8a69f4bb9c
Author: snaik4398 <snaik4398@gmail.com>
Date:   Fri Jun 14 13:12:16 2024 +0530

    learing data
==================================
git log --oneline : show only the one linemsg 
---------------------------------------------------------
PS C:\Users\Admin\Downloads\company Details\learing> git log --oneline
b9a6b31 (HEAD -> master) changing git files 3rd times
a0c199d changing git files 2nd times
6a16c00 changing git files
e9fa2e8 learing data
---------------------------------------------------------

GIT DIFF 


compare the commit 
accordinf to the commit order it will show the green and red lines which are added and delted 
----------------------------------------------
git diff <old commit id> <new commit id>


IMP : press q to quit 

=============================================================
=============================================================
=============================================================

HOW TO REMOVE YOU CHANGES 

UNDO CHNAGES 
-> Before staging (means before  runing the git ad command) 
	git checkout index.html 

-> After staging (after running git add command )
	git reset HEAD index.html 
	git checkout index.html 


-> After commit 
		need to do 
	git reset 
	then 
	git reset HEAD index.html 
	git checkout index.html 
	
=============================================================
=============================================================
=============================================================
 
git secret folder 
list the files 
ls .git
PS C:\Users\Admin\Downloads\company Details\learing> ls .git


    Directory: C:\Users\Admin\Downloads\company Details\learing\.git


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        14-06-2024     13:02                hooks
d-----        14-06-2024     13:02                info
d-----        14-06-2024     13:12                logs
d-----        14-06-2024     13:23                objects
d-----        14-06-2024     13:02                refs
-a----        14-06-2024     13:23             29 COMMIT_EDITMSG
-a----        14-06-2024     13:02            130 config
-a----        14-06-2024     13:02             73 description
-a----        14-06-2024     13:02             23 HEAD
-a----        14-06-2024     13:23            217 index

entering in to directoy
cd .git 


cat COMMIT_EDITMSG : this has the last commit details 

cat HEAD : head points to the latest commit 
cat config : all the config releted file 

cat hooks : files that will be executed when certain things happen 
when  a commit happens  if you want to do some certain jobs the here we canwrite thescript for it
info : all the info for repo 
objects: git store all the works as object 


index: store all the hashed value for stagging 

log : have all the logs


 ref : remote repository reference for internal use 
 
 
 =============================================================
=============================================================
=============================================================

GIT BRANCHES ::



git branch : it will show the list of branches and  which branch you are in 

git branch dev : create the new branch as dev 

 git checkout dev : switch to a the branch 
 
 if want to check then type git branches
 
 
 in the dev brnaches also it is the copy of master branch 
 andhere we can change our code 

then need to merge those two branches 

 
  
 ---------------------------
 PS C:\Users\Admin\Downloads\company Details\learing> git branch
* master
PS C:\Users\Admin\Downloads\company Details\learing> git branch sanjay
PS C:\Users\Admin\Downloads\company Details\learing> git branch\
git: 'branch\' is not a git command. See 'git --help'.

The most similar command is
        branch
PS C:\Users\Admin\Downloads\company Details\learing> git branch
* master
  sanjay
PS C:\Users\Admin\Downloads\company Details\learing>  git checkout sanjay
Switched to branch 'sanjay'
M       git.txt
PS C:\Users\Admin\Downloads\company Details\learing> git branch
  master
* sanjay
-------------------------------------------
MERGING OF BRANCHES  


before mergeing we need to go to the master branch then  from their we need to type the
git merge dev 

git merge <sub brnaches that>



======================
create the branch and check it out 

git branch newbranch 
git checkout newbranch

in one line 

git branch -b newbranch 

resolving the merge conflict :

when it appears remove  the un wanted code and then merge the branches 
then do a stage bye git add 
then commit again

==============================

Delete a branch 

:: git branch -d bugfix
----------------------------


 


 



